<idea-plugin>
    <id>org.jfrog.idea</id>
    <name>JFrog</name>
    <vendor email="support@jfrog.com" url="https://www.jfrog.com">JFrog</vendor>

    <description><![CDATA[
        <p>The plugin allows developers to find and fix security vulnerabilities in their projects and to see valuable information about the status of their code by continuously scanning it locally with the <a href="https://jfrog.com/xray/">JFrog Platform</a>.</p>

        <h3>Software Composition Analysis (SCA)</h3>
        <p>Scan your project dependencies for security issues. The plugin offers an automatic upgrade of the vulnerable dependencies to versions which include fixes.</p>

        <h3>CVE Research and Enrichment</h3>
        <p>
        For selected security issues, get leverage-enhanced CVE data that is provided by our JFrog Security Research team. Prioritize the CVEs based on:
        <ul>
        <li>JFrog Severity: The severity given by the JFrog Security Research team after the manual analysis of the CVE by the team. CVEs with the highest JFrog security severity are the most likely to be used by real-world attackers. This means that you should put effort into fixing them as soon as possible.</li>
        <li>Research Summary: The summary that is based on JFrog's security analysis of the security issue provides detailed technical information on the specific conditions for the CVE to be applicable.</li>
        <li>Remediation: Detailed fix and mitigation options for the CVEs.</li>
        </ul>
        <br>
        Check out what our research team is up to and stay updated on newly discovered issues by clicking on this link: https://research.jfrog.com
        </p>

        <h3>Advanced Scans</h3>
        <p>Vulnerability Contextual Analysis: This feature uses the code context to eliminate false positive reports on vulnerable dependencies that are not applicable to the code. Vulnerability Contextual Analysis is currently supported for Python, JavaScript, and Java code.</p>
        <p>Secrets Detection: Prevent the expose of keys or credentials that are stored in your source code.</p>
        <p>Infrastructure as Code (IaC) Scans: Secure your IaC files. Critical to keeping your cloud deployment safe and secure.</p>
        <br>
        <p>Advanced Scans require Xray version 3.66.5 or above and Enterprise X / Enterprise+ subscription with Advanced DevSecOps.</p>
        <p>For more information about the plugin see the <a href="https://github.com/jfrog/jfrog-idea-plugin#readme">README</a>.</p>
    ]]></description>

    <change-notes>
        <![CDATA[
          <li>Added the ability to suppress false positive secrets detection by adding 'jfrog-ignore' phrase above the unwanted result line.</li>
          <li>Bug fix - Fixed error thrown when Go project has no modules.</li>
          <li>Bug fix - Fixed ConcurrentModificationException thrown during a scan.</li>
          <li>Bug fix - Fixed converting file paths in Windows.</li>
          <li>Bug fix - Fixed errors when scanning projects using Gradle <7.6.</li>
        ]]>
    </change-notes>

    <idea-version since-build="223.4884.69"/>
    <depends>com.intellij.modules.lang</depends>
    <depends config-file="with-gradle.xml" optional="true">com.intellij.gradle</depends>
    <depends config-file="with-groovy.xml" optional="true">org.intellij.groovy</depends>
    <depends config-file="with-kotlin.xml" optional="true">org.jetbrains.kotlin</depends>
    <depends config-file="with-maven.xml" optional="true">org.jetbrains.idea.maven</depends>
    <depends config-file="with-go.xml" optional="true">org.jetbrains.plugins.go</depends>
    <depends config-file="with-python.xml" optional="true">com.intellij.modules.python</depends>
    <depends config-file="with-python-ce.xml" optional="true">PythonCore</depends>

    <extensions defaultExtensionNs="com.intellij">
        <applicationConfigurable id="JFrogGlobal" displayName="JFrog Global Configuration"
                                 instance="com.jfrog.ide.idea.ui.configuration.JFrogGlobalConfiguration"/>
        <projectConfigurable id="JFrogCi" displayName="JFrog CI Integration"
                             instance="com.jfrog.ide.idea.ui.configuration.JFrogProjectConfiguration"/>
        <applicationService serviceImplementation="com.jfrog.ide.idea.log.Logger"/>
        <applicationService serviceImplementation="com.jfrog.ide.idea.configuration.GlobalSettings"/>
        <projectService serviceImplementation="com.jfrog.ide.idea.ui.menus.filtermanager.CiFilterManager"/>
        <projectService serviceImplementation="com.jfrog.ide.idea.scan.ScanManager"/>
        <projectService serviceImplementation="com.jfrog.ide.idea.ci.CiManager"/>
        <projectService serviceImplementation="com.jfrog.ide.idea.ui.LocalComponentsTree"/>
        <projectService serviceImplementation="com.jfrog.ide.idea.ui.CiComponentsTree"/>
        <projectService serviceImplementation="com.jfrog.ide.idea.ui.JFrogToolWindow"/>
        <projectService serviceImplementation="com.jfrog.ide.idea.navigation.NavigationService"/>
        <projectService serviceImplementation="com.jfrog.ide.idea.inspections.JumpToCode"/>
        <toolWindow id="JFrog" anchor="bottom" icon="/icons/jfrog_icon.svg"
                    factoryClass="com.jfrog.ide.idea.ui.JFrogToolWindowFactory" canCloseContents="false"/>
        <notificationGroup id="JFrog Errors" displayType="BALLOON" isLogByDefault="false"/>
        <notificationGroup id="JFrog Log" displayType="NONE" isLogByDefault="true"/>
        <editorFloatingToolbarProvider implementation="com.jfrog.ide.idea.ui.JFrogFloatingToolbar"/>

        <localInspection language="JSON"
                         displayName="Show in JFrog plugin"
                         groupBundle="messages.InspectionsBundle"
                         groupKey="group.names.probable.bugs"
                         enabledByDefault="true"
                         implementationClass="com.jfrog.ide.idea.inspections.NpmInspection"/>
        <annotator language="JSON" implementationClass="com.jfrog.ide.idea.inspections.NpmInspection"/>
        <localInspection language="JSON"
                         displayName="Show in JFrog plugin"
                         groupBundle="messages.InspectionsBundle"
                         groupKey="group.names.probable.bugs"
                         enabledByDefault="true"
                         implementationClass="com.jfrog.ide.idea.inspections.YarnInspection"/>
        <annotator language="JSON" implementationClass="com.jfrog.ide.idea.inspections.YarnInspection"/>
        <externalAnnotator language=""
                           implementationClass="com.jfrog.ide.idea.inspections.JFrogSecurityAnnotator"/>
    </extensions>

    <actions>
        <group id="JFrog.Floating">
            <action id="JFrog.FloatingStartLocalScan"
                    class="com.jfrog.ide.idea.actions.StartLocalScanAction"
                    text="Trigger Scan"
                    description="Trigger JFrog Scan"
                    icon="/icons/jfrog_icon.svg"/>
        </group>
        <action id="JFrog.StartLocalScan"
                class="com.jfrog.ide.idea.actions.StartLocalScanAction"
                text="Trigger Scan"
                description="Trigger JFrog Scan"
                icon="AllIcons.Actions.Execute"/>
        <action id="JFrog.RefreshBuilds"
                class="com.jfrog.ide.idea.actions.RefreshBuildsAction"
                text="Refresh Builds"
                description="Force refresh builds"
                icon="AllIcons.Actions.Refresh"/>
        <action id="JFrog.CollapseAll"
                class="com.jfrog.ide.idea.actions.CollapseAllAction"/>
        <action id="JFrog.ExpandAll"
                class="com.jfrog.ide.idea.actions.ExpandAllAction"/>
        <action id="JFrog.GoToSettings"
                class="com.jfrog.ide.idea.actions.GoToSettingsAction"/>
        <action id="JFrog.ScanTimeLabelAction"
                class="com.jfrog.ide.idea.actions.ScanTimeLabelAction"
        />
    </actions>

</idea-plugin>
