import java.nio.file.Paths

plugins {
    id "org.jetbrains.intellij" version "1.10.0-SNAPSHOT"
    id "java"
    id "maven-publish"
    id "de.undercouch.download" version "5.3.0"
}

group 'com.jfrog.ide'
version currentVersion

sourceCompatibility = 1.11
targetCompatibility = 1.11

intellij {
    version = sandboxVersion
    plugins = ['gradle', 'maven', 'Groovy', 'properties', 'java', 'Kotlin', 'org.jetbrains.plugins.go:213.5744.18', 'Pythonid:213.5744.18']
    pluginName = 'JFrog'
    updateSinceUntilBuild = false
}

runPluginVerifier {
    ideVersions = [sandboxVersion]
}

runIde {
    jvmArgs '-Xmx2G'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://releases.jfrog.io/artifactory/oss-releases"
    }
    maven {
        url "https://releases.jfrog.io/artifactory/oss-snapshots"
    }
}

def buildInfoVersion = '2.39.0'
dependencies {
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.14.0'
    implementation group: 'org.jfrog.buildinfo', name: 'build-info-extractor', version: buildInfoVersion
    implementation group: 'org.jfrog.buildinfo', name: 'build-info-client', version: buildInfoVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.0'
    implementation group: 'org.jfrog.buildinfo', name: 'build-info-api', version: buildInfoVersion
    implementation group: 'com.jfrog.xray.client', name: 'xray-client-java', version: '0.11.0'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation group: 'org.jfrog.filespecs', name: 'file-specs-java', version: '1.1.2'
    implementation group: 'com.jfrog.ide', name: 'ide-plugins-common', version: '1.13.x-20230111.141928-1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'

    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '4.2.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.2.0'
}

test {
    testLogging {
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        minGranularity 0
    }
    if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
    }
}

def webViewVersion = '0.1.18'
def webviewFileName = 'jfrog-ide-webview-' + webViewVersion + '.tgz'
tasks.register('downloadWebview', Download) {
    src 'https://releases.jfrog.io/artifactory/ide-webview-npm/jfrog-ide-webview/-/' + webviewFileName
    dest buildDir
    onlyIfModified true
    finalizedBy('verifyWebview')
}

tasks.register('verifyWebview', Verify) {
    src new File(buildDir, webviewFileName)
    algorithm 'SHA-512'
    checksum 'a8222870ded18d7dac9628b02d0e10ec7dc9ac53939353dcad834e006e64315f0b204a00b70c73cc382db6f4352bbe5cf07edb6fccd12df3927f74e1f37add50'
    finalizedBy('extractWebview')
}

tasks.register('extractWebview', Copy) {
    from tarTree(new File(buildDir, webviewFileName))
    into Paths.get('src', 'main', 'resources', 'jfrog-ide-webview').toFile()
    include '**/build/**/*'
    eachFile {
        path = path.replace('package/build/', '')
    }
}

tasks.withType(JavaCompile).configureEach {
    options.deprecation = true
    options.encoding = "UTF-8"
    dependsOn('downloadWebview')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact buildPlugin
        }
    }
}

publishPlugin {
    token = System.getenv("JETBRAINS_TOKEN")
}
